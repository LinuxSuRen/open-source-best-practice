#!yaml-readme -p *.yaml --output tw.md
> 本文主要讨论在开源项目中的 Technical Writter（以下简称 TW）

## 基本要求

## 常规工作

## 更多工作

## 协作
作为 TW 往往需要与不同角色的人进行合作，例如：产品经理、研发、测试、运营、市场等，尤其会和研发有着紧密的协作。在与不同角色、背景的人合作时，如果能了解、掌握一些沟通技巧时，往往可以有事半功倍的效果。以下，针对不同角色的人合作，提供一些技巧。

在国内很多人交流后，有个相对普遍的观点是：研发往往不太喜欢写文档，工作安排普遍紧张（难以抽出时间来），写的文档容易出现省略基本的技术背景介绍等等。（在没有数据统计的情况下，这些论断可能是相对主观的，仅供参考）针对以上提出来的一些问题，笔者认为都是有相应原因的，了解这些背后的缘由，则可以帮助我们更好地互相理解、协作。

选择从事研发工作的人，往往对逻辑性的问题比较有兴趣，而在他们的职业生涯中如果没有对文档编写有过硬性要求的话，随着时间的推移，对文字编写、自然语言的技能则逐渐弱化。而从心理学的角度来看，人们通常会不由自主地选择逃避自己的“短板”。这可能是“研发不爱写文档”的一个典型原因。

而对于研发工作量大、没时间写文档等，则是一个具体的现象，并不是 TW 在与研发合作编写文档时遇到的困境的原因。假如，研发负责人（甚至在整个公司、团队的理念、文化中）并不认为文档属于软件交付过程中不可缺少的一部分，或者是认为研发只要输出代码即可，那么，在安排工作时就不会给文档编写预留足够的时间。在这样的公司理念的影响下，研发人员就会自然地以工作繁忙为理由选择推脱甚至拒绝相应的文档工作。简单来说，这是自上而下产生的问题。

至于文档编写过程中，可能会缺少一些必要的技术背景介绍，则也许是由于缺少训练而导致的一个普遍性的问题。除非是有着非常资深背景的人，在很多情况下，研发人员不会有编写大量文档的机会，很难在短时间内克服；这也正是需要专业 TW 加入的理由。

从每一位 TW 和整个公司、团队的角度，可以考虑不同的解决方案：

在自上而下管理风格的团队中，想要通过提出建议而改善情况有可能会逐渐演变为你讨厌团队的导火索。但笔者追求的是，把感性的烦恼转换为理性的思考，以更加健康、可持续的姿态来对面问题、解决问题。当然，这里不是反对大家给团队提出你的宝贵建议，而提倡的是以“无心插柳”的心态来提建议。以人为本，把与你合作的研发当做良师益友来看，他（她）也会有职业上、工作上的困扰，试着去了解并与之一起解决，至少可以推心置腹地进行几次沟通；相信在帮助对方过程中，他（她）也会尊重、理解、配合你的工作。

如果有能力从整个公司、团队角度来改善、解决这个问题的话，可以考虑强制约束研发要写文档，以及在新人招聘的流程中加上对文档技能的考察，并告知公司对文档编写的相关规定。当然，团队管理本身是一个非常复杂的话题，这里无法一一展开，实际落地过程中也会遇到各种各样的问题，坚持做对的事情并及时复盘（review）可以助你一臂之力。

## 成长路径

## Credit

Thanks for all those friends who helped me with this project.

* {{gh "Sherlock113" true}}
* {{gh "sylviababy" true}}
* {{gh "hf400159" true}}
